# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Runs on pushes targeting the default branch
  #push:
  #  branches: ["master"]
  #  paths-ignore:
  #    - '.github/workflows/*'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  setup:
    runs-on: ubuntu-latest
    
    outputs:
      mymatrix: ${{ steps.dataStep.outputs.myoutput }}
      
    steps:
        
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Create music output files
        id: dataStep
        run: echo "myoutput=`for f in \`find . -name *.json\`; do echo \`dirname ${f}\`; done|grep -v _site |cut -c3-| jq -cRs 'split("\n")'`" >> $GITHUB_OUTPUT

  run-matrix:
    needs: setup
    runs-on: ubuntu-latest

    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.mymatrix) }}

    steps:
      - name: Install musescore from apt
        run: |
          sudo apt-get update
          sudo apt-get install musescore3 musescore-general-soundfont-small musescore-general-soundfont musescore-general-soundfont-lossless

      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Create music output files
        env: 
          QT_QPA_PLATFORM: offscreen
        run:  echo ${{matrix.target}}    # musescore3 ${f} -j job.json     
        
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
    

        
      - name: Create music output files
        env: 
          QT_QPA_PLATFORM: offscreen
        run: for f in `find . -name *.json`; do cd `dirname ${f}`; musescore3 ${f} -j job.json; cd ..; done

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
 
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
