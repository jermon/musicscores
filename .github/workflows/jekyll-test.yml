# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Test Jekyll with GitHub Pages dependencies preinstalled

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Runs on pushes targeting the default branch
#  push:
#    branches: ["master"]
#    paths-ignore:
#      - '.github/workflows/*'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    outputs:
      all: ${{ steps.changes.outputs.all}}
      mscz: ${{ steps.changes.outputs.mscz }}
    env:
      Artifact_name: github-pages
    steps:
    
#      - name: Install musescore from apt
#        run: sudo apt-get install musescore3 musescore-general-soundfont-small musescore-general-soundfont musescore-general-soundfont-lossless

      - name: Check artifact existence
        uses: xSAVIKx/artifact-exists-action@v0
        with:
          name: "$Artifact_name"
  
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        if: ${{ steps.check_coverage_artifact.outputs.exists }}
        with:
          name: "$Artifact_name"
      
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changes
        # Set outputs using the command.
        run: |
          echo "all=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | xargs)"
          echo "all=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | xargs)" >> $GITHUB_OUTPUT

#          echo "mscz=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .mscz$ | xargs)" >> $GITHUB_OUTPUT
      
      - name: Debug out
        env:
          ALL: ${{ steps.changes.outputs.all }}
        run: echo $ALL
         
#      - name: Create musescore batchfile
#        run: |
#          chmod u+x ./_bin/generate_jobfile.sh
#          ./_bin/generate_jobfile.sh

#      - name: Create music output files
#        env: 
#          QT_QPA_PLATFORM: offscreen
#        run: for f in `find . -name *.json`; do cd `dirname ${f}`; musescore3 ${f} -j job.json; cd ..; done

#      - name: Setup Pages
#        uses: actions/configure-pages@v3

#      - name: Build with Jekyll
#        uses: actions/jekyll-build-pages@v1
#        with:
#          source: ./
#          destination: ./_site
 
#      - name: Upload artifact
#        uses: actions/upload-pages-artifact@v1

  # Lint Job      
  lint:
    runs-on: ubuntu-latest
    # require the first job to have ran
    needs: build
    # only run there are changed files
    if: ${{needs.build.outputs.all}}
    steps:
      - name: echo changed files
        run: echo ${{needs.build.outputs.all}}
        
#  # Deployment job
#  deploy:
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v2
