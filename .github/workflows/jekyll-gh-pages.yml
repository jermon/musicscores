# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install musescore 3.6
        run: |
          sudo apt-get install -y flatpak
          sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          sudo flatpak install -y --noninteractive flathub org.musescore.MuseScore  
          sudo chown 1001:1001 -R /run/user/1001

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
 
      - name: Run Makefile to make PDFs, MP3s, etc
        env:
          MS: "flatpak run org.musescore.MuseScore"
          name: Everybody_Wants_to_Be_a_Cat
          infile: $name/$name.mscz
          outfile: _site/$name/$name
        uses: coactions/setup-xvfb@v1
        with:
          run: $MS -o $outfile.svg  $infile.mscz
#            $MS -o $outfile.mp3  $infile.mscz
#            $MS -o $outfile.mpos $infile.mscz
#            $MS -o $outfile.xml  $infile.mscz
            
#      - name: Run Makefile to make PDFs, MP3s, etc
#        env:
#          MS: "flatpak run org.musescore.MuseScore"
#          name: Everybody_Wants_to_Be_a_Cat
#          infile: $name/$name.mscz
#          outfile: _site/$name/$name
#        uses: coactions/setup-xvfb@v1
#        with:
#          run: |
#            $MS -o $outfile.svg  $infile.mscz
#            $MS -o $outfile.mp3  $infile.mscz
#            $MS -o $outfile.mpos $infile.mscz
#            $MS -o $outfile.xml  $infile.mscz
#          # make MSCORE="flatpak run org.musescore.MuseScore"
            
      #- name: Run Musescore directly
      #  env:
      #    MS: "flatpak run org.musescore.MuseScore"
      #    name: Everybody_Wants_to_Be_a_Cat
      #    infile: $name/$name.mscz
      #    outfile: _site/$name/$name
      #  run: |
      #    $MS -o $outfile.svg  $infile.mscz
      #    $MS -o $outfile.mp3  $infile.mscz
      #    $MS -o $outfile.mpos $infile.mscz
      #    $MS -o $outfile.xml  $infile.mscz
      #    # $MS -j $name/job.json 

            
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
